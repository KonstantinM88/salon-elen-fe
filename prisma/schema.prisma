datasource db {
  provider = "postgresql" // если Neon — ставь "postgresql"
  url      = env("DATABASE_URL")                  // пулер (основные запросы)
  directUrl         = env("DIRECT_URL")           // прямое соединение
 // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")  // для shadow-базы в migrate dev
}

generator client {
  provider = "prisma-client-js"
}

enum BookingStatus {
  NEW
  CONFIRMED
  CANCELED
}

model Service {
  id          Int      @id @default(autoincrement())
  slug        String   @unique
  title       String
  description String?
  priceCents  Int
  durationMin Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  bookings Booking[]
}

model Booking {
  id        Int           @id @default(autoincrement())
  customer  String
  phone     String
  email     String?
  serviceId Int
  date      DateTime
  note      String?
  status    BookingStatus @default(NEW)
  createdAt DateTime      @default(now())

  service Service @relation(fields: [serviceId], references: [id])
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}

// === Added by patch: Articles & Media models ===
enum ArticleType {
  ARTICLE
  NEWS
}

model Article {
  id          String      @id @default(cuid())
  type        ArticleType @default(ARTICLE)
  title       String
  slug        String      @unique
  excerpt     String?
  body        String
  cover       String?
  publishedAt DateTime?
  expiresAt   DateTime?
  seoTitle    String?
  seoDesc     String?
  ogTitle     String?
  ogDesc      String?
  createdAt   DateTime    @default(now())
}

model Media {
  id        String   @id @default(cuid())
  album     String?
  title     String?
  alt       String?
  desc      String?
  src       String // URL or path
  width     Int?
  height    Int?
  tags      String[] @default([])
  createdAt DateTime @default(now())
}
